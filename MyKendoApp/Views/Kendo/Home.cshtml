@model IEnumerable<MyKendoRepository.Customer>
@{
    ViewBag.Title = "Home";
}

<h2>Customer List</h2>
<hr/>
<div id="grid">

</div>
<script type="text/javascript">
    $(document).ready(function () {        
        var dataSource = new kendo.data.DataSource({
            transport: {
                
                    read: {
                        url: '@Url.Action("Read","Kendo")',
                        dataType: "json"                        
                    },
                    update: {
                        url: '@Url.Action("Update","Kendo")',
                        dataType: "json"
                    },
                    destroy: {
                        url: '@Url.Action("Destroy", "Kendo")',
                        dataType: "json"
                    },
                    create: {
                        url: '@Url.Action("Create","Kendo")',
                        dataType: "json"

                    }
                //,
                    //parameterMap: function (options, operation) {
                    //    if (operation !== "read") {
                    //        alert(options.Name);
                    //        return {
                    //            models: kendo.stringify(options.models)
                    //        };
                    //    }
                    //}

                },                
                pageSize: 5,                
                schema: {
                    // JSon Return the Responds with "Data" title when Read Method call
                    // Make sure that whenever you insert new record than the new object return with 
                    // Unique Key(i.e Primary key) and set inside json - "Data" property
                    // Example : return Json(new { Data = new[] { objCustomer } }, JsonRequestBehavior.AllowGet);            
                    data: "Data", 
                    total: function (response) {
                        // JSon Return the Responds with "Data" Total Records could not found when Read Method call
                        return $(response.Data).length;
                    },
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: true },
                            Name: { validation: { required: true } },
                            Email: { validation: { required: true } },
                            Phone: { validation: { required: true } },
                            Pincode: { //type: "number",
                                validation: {
                                    required: true,
                                    Numbervalidation: function (input) {
                                        if (input.is("[name='Pincode']") && input.val() != "") {
                                            input.attr("data-Numbervalidation-msg", "Pincode must be in digits only.");
                                            return /^[0-9]/.test(input.val());
                                        }

                                        return true;
                                    },
                                    maxlength: function (input) {
                                        //alert(input.attr("name")); // Get Current Field Name attribute Value
                                        if (input.val().length != 6 && input.is("[name='Pincode']")) {
                                            input.attr("data-maxlength-msg", "Pincode must be 6 digits.");
                                            return false;
                                        }
                                        return true;
                                    }                                    
                                }
                            },
                            City: { validation: { required: true } }
                        }
                    }
                }
            });

        $("#grid").kendoGrid({
            //autoBind:true,
            dataSource: dataSource,
            columns: [
                "Name",
                {
                    field: "Email", title: "Email", filterable: {
                        cell: {
                            operator: "contains" // Set Default Filter Setting
                        }
                    }
                },
                { field: "Phone", title: "Phone" },
                { field: "Pincode", title: "Pin Code" },
                { field: "City", title: "City" },                
                { command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }
            ],
            toolbar: ["create", "pdf"],
            pdf: {
                allPages: true,
                fileName: "Kendo UI Grid Export.pdf"
            },
            pageable: true,
            height: 510,
            editable: "popup",
            sortable: true,
            scrollable: true,
            groupable: true,
            filterable: {
                mode: "row"
            },

        });
                
        //$("#testMask").kendoMaskedTextBox({
        //    mask: "000000",
        //    clearPromptChar: true
        //});

        //$("#testPhone").kendoMaskedTextBox({
        //    mask: "~00 00000 00000",
        //    rules: {
        //        "~": /[+]/
        //    }
        //})        
    });
    
</script>

@*<input id="testMask"/>
<hr/>
<input id="testPhone"/>*@